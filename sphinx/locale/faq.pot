# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-23 13:32+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../faq.rst:33
msgid "FAQ"
msgstr ""

#: ../faq.rst:36
msgid "Why Tarantool?"
msgstr ""

#: ../faq.rst:37
msgid "Tarantool is a result of a long trial and error process within Mail.Ru. It's the Nth generation of a family of custom in-memory data servers, developed for various web applications. Besides, when Tarantool development started (2008) there were no stable and sufficiently functional open source alternative."
msgstr ""

#: ../faq.rst:43
msgid "Why Lua?"
msgstr ""

#: ../faq.rst:44
msgid "Lua is a lightweight, fast, extensible multi-paradigm language. Lua also happens to be very easy to embed. Lua coroutines relate very closely to Tarantool fibers, and Lua architecture works well with Tarantool internals. Lua is the first, but hopefully not the last, stored program language for Tarantool."
msgstr ""

#: ../faq.rst:50
msgid "What's the key advantage of Tarantool?"
msgstr ""

#: ../faq.rst:51
msgid "Tarantool provides a rich database feature set (HASH, TREE, RTREE, BITSET indexes, secondary indexes, composite indexes, transactions, triggers, asynchronous replication) in a flexible environment of a Lua interpreter."
msgstr ""

#: ../faq.rst:55
msgid "These two properties make it possible to code fast, atomic and reliable in-memory data servers which handle non-trivial application-specific logic. The win over traditional SQL servers is in performance: low-overhead, lock-free architecture means Tarantool can serve an order of magnitude more requests per second, on comparable hardware. The win over NoSQL alternatives is in flexibility: Lua allows flexible processing of data stored in a compact, denormalized format."
msgstr ""

#: ../faq.rst:63
msgid "What are your development plans?"
msgstr ""

#: ../faq.rst:64
msgid "We continuously improve server performance. On the feature front, automatic sharding and bsync (bidirectional file synchronization) and a subset of SQL are the major goals of 2016."
msgstr ""

#: ../faq.rst:69
msgid "Who is developing Tarantool?"
msgstr ""

#: ../faq.rst:70
msgid "There is a small engineering team employed by Mail.Ru -- check out our commit logs on github. The development is fully open, and most of the connectors authors and maintainers for different distributions are from the community."
msgstr ""

#: ../faq.rst:75
msgid "How serious is Mail.Ru about Tarantool?"
msgstr ""

#: ../faq.rst:76
msgid "Tarantool is an open source project, distributed under a BSD license, and as such does not depend on any one sponsor. However, it is currently an integral part of Mail.Ru backbone, so it gets a lot of support from Mail.Ru."
msgstr ""

#: ../faq.rst:81
msgid "What happens when Tarantool runs out of memory?"
msgstr ""

#: ../faq.rst:82
msgid "The server stops accepting updates until more memory is available. Read and delete requests continue to be served without difficulty."
msgstr ""

